[{"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\index.js":"1","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\App.js":"2","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\MainApp\\MainApp.js":"3","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\utils\\queries.js":"4","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\AddPetForm\\AddPetForm.js":"5","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js":"6","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Login\\index.js":"7","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Sidebar\\index.js":"8","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Nav\\index.js":"9","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Profile\\index.js":"10","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Register\\index.js":"11","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Home\\index.js":"12","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Search\\index.js":"13","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Create\\index.js":"14","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js":"15","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Explore\\index.js":"16","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\utils\\mutations.js":"17","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\utils\\auth.js":"18","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\CommentForm\\CommentForm.js":"19","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\CommentList\\CommentList.js":"20","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js":"21","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Login\\Login.js":"22","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js":"23","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js":"24","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Register\\Register.js":"25","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js":"26","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Home\\Home.js":"27","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Search\\Search.js":"28","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js":"29","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js":"30","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Create\\Create.js":"31","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js":"32","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Calendar\\index.js":"33","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js":"34"},{"size":230,"mtime":1675665376515,"results":"35","hashOfConfig":"36"},{"size":766,"mtime":1675665376498,"results":"37","hashOfConfig":"36"},{"size":1840,"mtime":1675665376510,"results":"38","hashOfConfig":"36"},{"size":983,"mtime":1675665376526,"results":"39","hashOfConfig":"36"},{"size":3762,"mtime":1675665376516,"results":"40","hashOfConfig":"36"},{"size":1494,"mtime":1675665376523,"results":"41","hashOfConfig":"36"},{"size":39,"mtime":1675665376509,"results":"42","hashOfConfig":"36"},{"size":39,"mtime":1675665376514,"results":"43","hashOfConfig":"36"},{"size":35,"mtime":1675665376511,"results":"44","hashOfConfig":"36"},{"size":39,"mtime":1675665376521,"results":"45","hashOfConfig":"36"},{"size":42,"mtime":1675665376513,"results":"46","hashOfConfig":"36"},{"size":38,"mtime":1675665376519,"results":"47","hashOfConfig":"36"},{"size":38,"mtime":1675665376522,"results":"48","hashOfConfig":"36"},{"size":38,"mtime":1675665376517,"results":"49","hashOfConfig":"36"},{"size":40,"mtime":1675665376520,"results":"50","hashOfConfig":"36"},{"size":41,"mtime":1675665376518,"results":"51","hashOfConfig":"36"},{"size":1862,"mtime":1675665376525,"results":"52","hashOfConfig":"36"},{"size":1053,"mtime":1675665376524,"results":"53","hashOfConfig":"36"},{"size":2174,"mtime":1675665376507,"results":"54","hashOfConfig":"36"},{"size":561,"mtime":1675665376508,"results":"55","hashOfConfig":"36"},{"size":926,"mtime":1675666992834,"results":"56","hashOfConfig":"36"},{"size":2358,"mtime":1675665376509,"results":"57","hashOfConfig":"36"},{"size":540,"mtime":1675665376514,"results":"58","hashOfConfig":"36"},{"size":1937,"mtime":1675665376511,"results":"59","hashOfConfig":"36"},{"size":1896,"mtime":1675665376513,"results":"60","hashOfConfig":"36"},{"size":1318,"mtime":1675665376521,"results":"61","hashOfConfig":"36"},{"size":1244,"mtime":1675665376519,"results":"62","hashOfConfig":"36"},{"size":1235,"mtime":1675665376522,"results":"63","hashOfConfig":"36"},{"size":2071,"mtime":1675665376518,"results":"64","hashOfConfig":"36"},{"size":3729,"mtime":1675665376520,"results":"65","hashOfConfig":"36"},{"size":2779,"mtime":1675665376517,"results":"66","hashOfConfig":"36"},{"size":1009,"mtime":1675665376506,"results":"67","hashOfConfig":"36"},{"size":40,"mtime":1675665376505,"results":"68","hashOfConfig":"36"},{"size":1487,"mtime":1675665376505,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ajw50o",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\App.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\MainApp\\MainApp.js",["152"],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_POSTS } from \"../../utils/queries\";\r\n\r\nimport Home from \"../../pages/Home\";\r\nimport AddPetForm from \"../../pages/AddPetForm/AddPetForm\";\r\nimport Create from \"../../pages/Create\";\r\nimport PlayDate from \"../../pages/PlayDate\";\r\nimport Profile from \"../../pages/Profile\";\r\nimport Search from \"../../pages/Search\";\r\nimport Explore from \"../../pages/Explore\";\r\nimport SinglePost from \"../../pages/SinglePost/SinglePost\";\r\n\r\nimport Login from \"../Login\";\r\nimport Register from \"../Register\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Nav from \"../Nav\";\r\n\r\nexport default function MainApp() {\r\n  const { loadingPosts, data: postsData } = useQuery(QUERY_POSTS);\r\n  // NOTE: must be a key-value pair of data: ...\r\n  console.log('>>> logging postsData: ', postsData);\r\n  // console.log(postsData.posts.)\r\n\r\n  // Get posts from query:\r\n  var posts = postsData ? postsData.posts : [];\r\n  console.log('posts: ', posts);\r\n  \r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Sidebar>\r\n          <Nav></Nav>\r\n        </Sidebar>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home posts={posts}/>} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/add-pet\" element={<AddPetForm />} />\r\n          <Route path=\"/create\" element={<Create />} />\r\n          <Route path=\"/explore\" element={<Explore />} />\r\n          <Route path=\"/playdates\" element={<PlayDate />} />\r\n          <Route path=\"/profiles\" element={<Profile />} />\r\n          <Route path=\"/search\" element={<Search />} />\r\n          <Route path=\"/posts/:postId\" element={<SinglePost posts={posts} />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\utils\\queries.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\AddPetForm\\AddPetForm.js",["153","154"],"import { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_PET } from \"../../utils/mutations\";\r\n\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default function AddPetForm() {\r\n  const [formState, setFormState] = useState({\r\n    petOwner: Auth.getUser().data._id,\r\n    petName: \"\",\r\n    petAge: \"\",\r\n    petType: \"\",\r\n    petBreed: \"\",\r\n    petFavFood: \"\",\r\n    petFavActivities: \"\",\r\n    petBio: \"\",\r\n  });\r\n\r\n  const [addPet, { error, data }] = useMutation(ADD_PET);\r\n  \r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    console.log(name, value);\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  // Authenticate user:\r\n  const { loading, data: meData } = useQuery(QUERY_ME);\r\n  const me = meData?.me || []; \r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await addPet({\r\n        variables: { ...formState }\r\n      });\r\n      console.log(data);\r\n      setFormState('');\r\n      window.location.replace('/profiles');\r\n\r\n    } catch (error) {\r\n      console.error('>>> handleSubmit error: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pet-form-card flex-column align-center\">\r\n      <h2 className=\"text-center\">🐾 Add Your Pet 🐾</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your pet's name*\"\r\n          name=\"petName\"\r\n          value={formState.petName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <label>\r\n          <h6>Select type of animal for your pet*:</h6>\r\n          <select name=\"petType\" value={formState.petType} onChange={handleInputChange}>\r\n            <option value=\"default\">Select</option>\r\n            <option value=\"dog\">🐶 Doggo</option>\r\n            <option value=\"cat\">🐱 Catto</option>\r\n            <option value=\"rabbit\">🐰 Bunny</option>\r\n            <option value=\"hamster\">🐹 Hamster/Guinea Pig/Mouse/Chinchilla</option>\r\n            <option value=\"bird\">🐦 Birdy</option>\r\n            <option value=\"reptile\">🐢 Reptile Fam</option>\r\n            <option value=\"aquatic\">🐠 Aquatics</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your pet's age (optional)\"\r\n          name=\"petAge\"\r\n          value={formState.petAge}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your pet's breed (optional)\"\r\n          name=\"petBreed\"\r\n          value={formState.petBreed}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your pet's favorite food (optional)\"\r\n          name=\"petFavFood\"\r\n          value={formState.petFavFood}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your pet's favorite activities (optional)\"\r\n          name=\"petFavActivities\"\r\n          value={formState.petFavActivities}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          placeholder=\"Type a short bio for your pet here... (optional)\"\r\n          name=\"petBio\"\r\n          value={formState.petBio}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-info\">Submit</button>\r\n      </form>\r\n      {error && (\r\n        <div className=\"text-danger\">\r\n          Invalid input\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js",["155","156","157"],"import { useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport CommentList from \"../../components/CommentList/CommentList\";\r\n// TODO: import CommentForm here when it's made\r\nimport CommentForm from \"../../components/CommentForm/CommentForm\";\r\n\r\nimport Login from \"../../components/Login\";\r\n\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport { QUERY_SINGLE_POST } from \"../../utils/queries\";\r\n\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\n\r\nexport default function SinglePost(props) {\r\n  console.log('Starting SinglePost()...');\r\n\r\n  // Retrieve postId from the route:\r\n  const { postId } = useParams();\r\n  \r\n  const { posts } = props;\r\n  console.log('logging posts: ', posts);\r\n\r\n  const post = posts.find(post => post._id === postId);\r\n  console.log('>>> logging post: ', post);\r\n\r\n  // Redirect to log in page if not logged in:\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n  const me = data?.me || []; \r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  // if (loadingPost) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  \r\n  return (\r\n    <div className=\"flex-column align-center\">\r\n      <h2>💭 Join the Discussion 💭</h2>\r\n      <div className='app-postcard_page my-5 px-6 py-5'>\r\n        <PostCard postsData={post} />\r\n        <div className=\"\">\r\n          <CommentForm postId={postId} />\r\n        </div>\r\n      </div>\r\n      {/* TODO: Add CommentList & CommentForm */}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Login\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Nav\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Profile\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Register\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Search\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Create\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Explore\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\utils\\mutations.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\utils\\auth.js",["158"],"import decode from \"jwt-decode\";\r\n\r\nclass AuthService {\r\n  getUser() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token ? true : false;\r\n  }\r\n  // This function checks if local storage has the \"auth_token\"\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"auth_token\");\r\n  }\r\n\r\n  login(token) {\r\n    localStorage.setItem(\"auth_token\", token);\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"auth_token\");\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\CommentForm\\CommentForm.js",["159","160","161","162"],"import { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_COMMENT } from \"../../utils/mutations\";\r\n\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default function CommentForm(props) {\r\n  const { postId } = props;\r\n\r\n  const [formState, setFormState] = useState({\r\n    postId: postId,\r\n    commentAuthor: Auth.getUser().data._id,\r\n    commentText: \"\",\r\n  });\r\n\r\n  const [addComment, { error, data }] = useMutation(ADD_COMMENT);\r\n\r\n  // Authenticate user:\r\n  const { loading, data: meData } = useQuery(QUERY_ME);\r\n  const me = meData?.me || []; \r\n  // console.log('me: ', me);\r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  };\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    console.log(name, value);\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: { ...formState }\r\n      });\r\n      console.log(data);\r\n      setFormState('');\r\n\r\n    } catch (error) {\r\n      console.error('>>> handleSubmit error: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleFormSubmit} className=\"display-inline\">\r\n        <div className=\"display-inline\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a comment...\"\r\n            name=\"commentText\"\r\n            value={formState.commentText}\r\n            onChange={handleInputChange}\r\n            style={{ border: 'none' }}\r\n            className=\"negative-margin no-border text-lg\"\r\n          />\r\n        </div>\r\n        <div className=\"display-inline\">\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-xsm btn-comment\"\r\n          >\r\n            <img \r\n              src=\"https://res.cloudinary.com/dnwrm14k9/image/upload/v1675658604/send-4008_kgqwyo.png\" \r\n              width=\"20px\"\r\n            ></img>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\CommentList\\CommentList.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js",["163","164"],"import { Link } from 'react-router-dom';\r\n\r\nexport default function PostCard(props) {\r\n  const { postsData } = props;\r\n  return (\r\n    // FRONT-END TODO: Add styling to the div below to look like an Instagram post\r\n    <div>\r\n      <div className='app-postcard_data-author'>\r\n        <div className='app-postcard_data-author-avatar'>\r\n          <img src={'https://res.cloudinary.com/dnwrm14k9/image/upload/v1675571532/avatar_if5map.png'} alt='avatar' />\r\n        </div>\r\n        <h4>{postsData.postAuthor.name}</h4>\r\n      </div>\r\n      <p>{postsData.createdAt}</p>\r\n      {/* Render uploaded image from Cloudinary: */}\r\n      <div className='app-postcard_data-image'>\r\n        <img className='uploadedimage' src={postsData.postImageURL} width={500}></img>\r\n      </div>\r\n      {/* Render author's name: */}\r\n      <p><span className='username'>{postsData.postAuthor.name}</span> {postsData.postText}</p>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Login\\Login.js",["165"],"import { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../../utils/mutations\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Auth from \"../../utils/auth.js\";\r\nimport image from '../../assets/background.png';\r\n\r\n\r\nfunction Login() {\r\n  const [formState, setFormState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await Login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  return (     \r\n      <div className=\"app-login_page\">\r\n            <hr className=\"lin\"></hr>\r\n            <div className=\"app-login_page__container\" style={{backgroundImage: `url(${image})`,\r\n              backgroundSize: \"cover\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              height: \"70vh\",\r\n              width: \"98vw\",\r\n              opacity: \"0.9\",\r\n            }}> \r\n              <h1>Log In</h1>\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  name=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"********\"\r\n                  name=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <button className=\"btn btn-block btn-primary text-dark login\" type=\"submit\">Login</button>\r\n              </form>\r\n              <h4>\r\n                Don't have an account? \r\n                <Link className=\"text-link no-underline\" to=\"/register\"> Sign up</Link>\r\n              </h4>\r\n              {error && (\r\n                <div className=\"my-3 p-3 bg-danger text-white\">\r\n                  {error.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Register\\Register.js",["166"],"import { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REGISTER_USER } from \"../../utils/mutations\";\r\n\r\nimport Auth from \"../../utils/auth.js\";\r\n\r\nfunction Register() {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  // const [registerError, setRegisterError] = useState('');\r\n\r\n  const [register, { error, data }] = useMutation(REGISTER_USER);\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await register({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data);\r\n      Auth.login(data.register.token);\r\n    } catch (error) {\r\n      // setRegisterError(error);\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"signup-form-card flex-column align-center\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your username*\"\r\n          name=\"name\"\r\n          value={formState.name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Your email*\"\r\n          name=\"email\"\r\n          value={formState.email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"******\"\r\n          name=\"password\"\r\n          value={formState.password}\r\n          onChange={handleInputChange}\r\n        />        \r\n        <button type=\"submit\" className=\"btn btn-info signup-btn\">Sign up</button>\r\n      </form>\r\n      {error && (\r\n        <div className=\"text-danger\">\r\n          Invalid credentials\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js",["167"],"import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nfunction ProfilePage({ currentUser, currentUserPet, posts, updatePetName }) {\r\n  const [petName, setPetName] = useState(currentUserPet);\r\n\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n  const me = data?.me || []; \r\n  console.log('me: ', me);\r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  const handleUpdatePetName = (e) => {\r\n    e.preventDefault();\r\n    updatePetName(petName);\r\n    console.log(`Pet name updated to: ${petName}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>{currentUser}'s Profile</h1> */}\r\n      {/* <h2>Pet: {currentUserPet}</h2> */}\r\n      <form onSubmit={handleUpdatePetName}>\r\n        <label>\r\n          Change Pet Name:\r\n          <input\r\n            type=\"text\"\r\n            value={petName}\r\n            onChange={(e) => setPetName(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n      <h2>Posts</h2>\r\n      {/* {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <p>{post.content}</p>\r\n          <p>{post.date}</p>\r\n        </div>\r\n      ))} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Home\\Home.js",["168","169"],"import { useQuery } from \"@apollo/client\";\r\nimport Login from \"../../components/Login\";\r\n\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport { QUERY_POSTS } from \"../../utils/queries\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\n\r\nfunction Home(props) {\r\n  const { posts } = props;\r\n\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n  const me = data?.me || []; // *QUESTION: Why set to empty array instead of empty object? To avoid null or undefined references\r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-column align-center\">\r\n      {posts && \r\n        posts.map((post) => (\r\n          <div key={post._id} className='app-postcard_page my-5 px-6 py-5'>\r\n            <PostCard \r\n              postsData={post}\r\n            />\r\n            <Link className='' to={`/posts/${post._id}`} style={{ textDecoration: 'none' }}>\r\n              <p className='light-text'>View post and leave comments</p>\r\n            </Link>\r\n          </div>\r\n      ) || (\r\n        <div>\r\n          <h2>No posts yet. Add your own post with \"📝 Create\"!</h2>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Search\\Search.js",["170"],"import React, {useState} from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nfunction SearchPage() {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n    const me = data?.me || []; \r\n    console.log('me: ', me);\r\n  \r\n    if (me.length === 0) {\r\n      return (\r\n        <Login />\r\n      )\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // TODO: Make API call to search for pets or users with the search term\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Search by pet name or username\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n            <h2>Results</h2>\r\n            <ul>\r\n                {/* TODO: Add display search results */}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchPage;","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js",["171"],"import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nfunction ExplorePage() {\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n    const me = data?.me || []; \r\n    console.log('me: ', me);\r\n\r\n    if (me.length === 0) {\r\n         return (\r\n        <Login />\r\n    )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <h1>Explore</h1>\r\n            <p>Discover new pets and stay updated on your favorites</p>\r\n            <h2>Popular Pets</h2>\r\n            <ul>\r\n                <li>\r\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 1\" />\r\n                    <h3>Pet 1</h3>\r\n                    <p>Pet 1's bio</p>\r\n                </li>\r\n                <li>\r\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 2\" />\r\n                    <h3>Pet 2</h3>\r\n                    <p>Pet 2's bio</p>\r\n                </li>\r\n                <li>\r\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 3\" />\r\n                    <h3>Pet 3</h3>\r\n                    <p>Pet 3's bio</p>\r\n                </li>\r\n            </ul>\r\n            <button>See More Popular Pets</button>\r\n            <h2>Recommend Pets</h2>\r\n            <ul>\r\n                <li>\r\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 4\" />\r\n                    <h3>Pet 4</h3>\r\n                    <p>Pet 4's bio</p>\r\n                </li>\r\n                <li>\r\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 5\" />\r\n                    <h3>Pet 5</h3>\r\n                    <p>Pet 5's bio</p>\r\n                </li>\r\n                <li>\r\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 6\" />\r\n                    <h3>Pet 6</h3>\r\n                    <p>Pet 6's bio</p>\r\n                </li>\r\n            </ul>\r\n            <button>See More Recommended Pets</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExplorePage;","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js",["172","173","174"],"import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\n\r\nimport Login from \"../../components/Login\";\r\nimport MyCalendar from \"../../components/Calendar\";\r\n\r\nfunction PlayDatePage() {\r\n    const [pet1, setPet1] = useState(\"\");\r\n    const [pet2, setPet2] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [activity, setActivity] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n    const [playDates, setPlayDates] = useState(\"\");\r\n    const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n    const me = data?.me || []; \r\n    console.log('me: ', me);\r\n\r\n    if (me.length === 0) {\r\n        return (\r\n        <Login />\r\n    )\r\n  }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //TODO: add logic or API cal to schedule play date\r\n        console.log(`Scheduled play date between ${pet1} and ${pet2} at ${location} for ${activity}`);\r\n        // setPlayDates([...playDates, newPlayDate]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Schedule a Play Date</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>Pet 2</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={pet2}\r\n                    onChange={(e) => setPet2(e.target.value)}\r\n                    placeholder=\"Enter pet name or username\"\r\n                />\r\n                <h2>Location</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    placeholder=\"Enter a location\"\r\n                />\r\n                <h2>Activity</h2>\r\n                <input \r\n                    type=\"text\"\r\n                    id=\"activity\"\r\n                    value={activity}\r\n                    onChange={(e) => setActivity(e.target.value)}\r\n                    placeholder=\"Enter an activity for a play date\"\r\n                />\r\n                {/* <MyCalendar \r\n                    // onClickDay={onDateClick}\r\n                    value={new Date()}\r\n                    style={{\r\n                      width: \"500px\",\r\n                      height: \"500px\",\r\n                      margin: \"0 auto\",\r\n                      backgroundColor: \"#f2f2f2\",\r\n                      borderRadius: \"10px\"\r\n                    }}\r\n                    selectedDate={selectedDate}\r\n                    setSelectedDate={setSelectedDate}\r\n                /> */}\r\n                <h2>Date</h2>\r\n                <input \r\n                    type=\"text\"\r\n                    id=\"date\"\r\n                    value={selectedDate ? selectedDate.toDateString() : ''}\r\n                    onClick={() => setShowCalendar(true)}\r\n                    // placeholder=\"Click to select a date\"\r\n                />\r\n                {showCalendar && \r\n                  <MyCalendar \r\n                    value={new Date()}\r\n                    style={{\r\n                      width: \"500px\",\r\n                      height: \"500px\",\r\n                      margin: \"0 auto\",\r\n                      backgroundColor: \"#f2f2f2\",\r\n                      borderRadius: \"10px\"\r\n                    }}\r\n                    selectedDate={selectedDate}\r\n                    setSelectedDate={setSelectedDate}\r\n                    setShowCalendar={setShowCalendar}\r\n                    />\r\n                }\r\n                <button type=\"submit\">Schedule Play Date</button>\r\n            </form>\r\n            <MyCalendar playDates={playDates} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayDatePage;","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\pages\\Create\\Create.js",["175","176"],"import React, { useState } from \"react\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nimport { QUERY_POSTS } from \"../../utils/queries\";\r\nimport { ADD_POST } from \"../../utils/mutations\";\r\nimport CloudinaryUploadWidget from \"../../components/Cloudinary/UploadWidget\"; \r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nfunction CreatePostPage() {\r\n  const [postText, setPostText] = useState(\"\");\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n  const [postImageURL, setPostImageURL] = useState(\"\");\r\n\r\n  const [addPost, { error }] = useMutation(ADD_POST, {\r\n    update(cache, { data: { addPost } }) {\r\n      // NOTE: Must QUERY_POSTS somewhere else before reading the cache.\r\n      try {\r\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\r\n        console.log('posts: ', posts);\r\n        cache.writeQuery({\r\n          query: QUERY_POSTS,\r\n          data: { posts: [addPost, ...posts] },\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n  const me = data?.me || []; \r\n  // console.log('me: ', me);\r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  // const handleImageChange = (e) => {\r\n  //   setPostImage(e.target.files[0]);\r\n  // };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      console.log('postImageURL: ', postImageURL);\r\n      const { data } = await addPost({\r\n        variables: {\r\n          postText,\r\n          postImageURL,\r\n          postAuthor: Auth.getUser().data._id,\r\n        },\r\n      });\r\n      \r\n      setPostText('');\r\n      window.location.replace('/');\r\n    } catch (error) {\r\n      console.error('>>> handleSubmit error: ', error);\r\n    }\r\n    setPostText(\"\");\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'postText' && value.length <= 280) {\r\n      setPostText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>📝 Create a Post</h2>\r\n      <p\r\n        className={`m-0 ${\r\n          characterCount === 280 || error ? 'text-danger' : ''\r\n        }`}\r\n      >\r\n        Character Count: {characterCount}/280\r\n      </p>\r\n      <form onSubmit={handleSubmit}>\r\n        <CloudinaryUploadWidget setPostImageURL={setPostImageURL} />\r\n        <br />\r\n        <textarea\r\n          name=\"postText\"\r\n          placeholder=\"Enter post text\"\r\n          value={postText}\r\n          onChange={handleInputChange}\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePostPage;","C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Calendar\\index.js",[],"C:\\Users\\justi\\Code\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js",[],{"ruleId":"177","severity":1,"message":"178","line":20,"column":11,"nodeType":"179","messageId":"180","endLine":20,"endColumn":23},{"ruleId":"177","severity":1,"message":"181","line":23,"column":27,"nodeType":"179","messageId":"180","endLine":23,"endColumn":31},{"ruleId":"177","severity":1,"message":"182","line":31,"column":11,"nodeType":"179","messageId":"180","endLine":31,"endColumn":18},{"ruleId":"177","severity":1,"message":"183","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":19},{"ruleId":"177","severity":1,"message":"184","line":11,"column":10,"nodeType":"179","messageId":"180","endLine":11,"endColumn":27},{"ruleId":"177","severity":1,"message":"182","line":28,"column":11,"nodeType":"179","messageId":"180","endLine":28,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":41,"column":1,"nodeType":"187","endLine":41,"endColumn":34},{"ruleId":"177","severity":1,"message":"188","line":20,"column":24,"nodeType":"179","messageId":"180","endLine":20,"endColumn":29},{"ruleId":"177","severity":1,"message":"181","line":20,"column":31,"nodeType":"179","messageId":"180","endLine":20,"endColumn":35},{"ruleId":"177","severity":1,"message":"182","line":23,"column":11,"nodeType":"179","messageId":"180","endLine":23,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":71,"column":13,"nodeType":"191","endLine":74,"endColumn":14},{"ruleId":"177","severity":1,"message":"192","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":17,"column":9,"nodeType":"191","endLine":17,"endColumn":81},{"ruleId":"177","severity":1,"message":"181","line":16,"column":26,"nodeType":"179","messageId":"180","endLine":16,"endColumn":30},{"ruleId":"177","severity":1,"message":"181","line":16,"column":29,"nodeType":"179","messageId":"180","endLine":16,"endColumn":33},{"ruleId":"177","severity":1,"message":"182","line":9,"column":11,"nodeType":"179","messageId":"180","endLine":9,"endColumn":18},{"ruleId":"177","severity":1,"message":"193","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":21},{"ruleId":"177","severity":1,"message":"182","line":14,"column":11,"nodeType":"179","messageId":"180","endLine":14,"endColumn":18},{"ruleId":"177","severity":1,"message":"182","line":9,"column":13,"nodeType":"179","messageId":"180","endLine":9,"endColumn":20},{"ruleId":"177","severity":1,"message":"182","line":7,"column":13,"nodeType":"179","messageId":"180","endLine":7,"endColumn":20},{"ruleId":"177","severity":1,"message":"194","line":9,"column":18,"nodeType":"179","messageId":"180","endLine":9,"endColumn":25},{"ruleId":"177","severity":1,"message":"195","line":14,"column":23,"nodeType":"179","messageId":"180","endLine":14,"endColumn":35},{"ruleId":"177","severity":1,"message":"182","line":17,"column":13,"nodeType":"179","messageId":"180","endLine":17,"endColumn":20},{"ruleId":"177","severity":1,"message":"182","line":33,"column":11,"nodeType":"179","messageId":"180","endLine":33,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":52,"column":15,"nodeType":"179","messageId":"180","endLine":52,"endColumn":19},"no-unused-vars","'loadingPosts' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'CommentList' is defined but never used.","'QUERY_SINGLE_POST' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'QUERY_POSTS' is defined but never used.","'setPet1' is assigned a value but never used.","'setPlayDates' is assigned a value but never used."]